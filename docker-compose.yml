version: '3.5'
services:
  webserver:
    build: nginx/.
    ports:
      - "80:80"
      - "443:443"
    environment:
      - SERVER_PORT=${PORT}
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
      - ./dhparam:/etc/ssl/certs
    restart: always
    depends_on:
      - server
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email paperemailsubscriber@gmail.com --agree-tos --no-eff-email --force-renewal -d paper-reporter.com -d www.paper-reporter.com

  server:
    build:
      context: ./
      dockerfile: ./Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=${PORT}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - REDIS_URI=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}
    restart: always
    depends_on:
      - mongo
      - redis
    networks:
      - app-network

  workers:
    build:
      context: ./
      dockerfile: ./workers/Dockerfile
    environment:
      - NODE_ENV=production
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - EMAIL=${EMAIL}
      - EMAIL_PASS=${EMAIL_PASS}
      - REDIS_URI=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}
    restart: always
    depends_on:
      - mongo
      - redis
    networks:
      - app-network


  mongo:
    image: mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodbdata:/data/db
    networks:
      - app-network


  admin-mongo:
    # mongodb://ROMAN:12345@mongo
    image: adicom/admin-mongo
    ports:
      - "${ADMIN_MONGO_PORT}:${ADMIN_MONGO_PORT}"
    environment:
      - PORT=${ADMIN_MONGO_PORT}
      - HOST=mongo
    depends_on:
      - mongo
    restart: always
    networks:
      - app-network


  redis:
    build: redis/.
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - app-network


volumes:
  mongodbdata:
  redis_data:
  certbot-etc:
  certbot-var:
  web-root:

networks:
  app-network:
