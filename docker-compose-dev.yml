version: '3.5'
services:
  server:
    build:
      context: ./
      dockerfile: ./Dockerfile
    ports:
      - "${EXTERNAL_PORT}:${PORT}"
      - "${DEBUG_PORT}:${DEBUG_PORT}"
    environment:
      - NODE_ENV="dev"
      - PORT=${PORT}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - REDIS_URI=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}
    volumes:
      - ./:/usr/src/app
    restart: always
    depends_on:
      - mongo
      - redis

  mongo:
    image: mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodbdata:/data/db

  admin-mongo:
    # mongodb://ROMAN:12345@mongo
    image: adicom/admin-mongo
    ports:
      - "${ADMIN_MONGO_PORT}:${ADMIN_MONGO_PORT}"
    environment:
      - PORT=${ADMIN_MONGO_PORT}
      - HOST=mongo
    depends_on:
      - mongo
  redis:
    build: redis/.
    volumes:
      - redis_data:/data

  bullboard:
    image: deadly0/bull-board
    ports:
      - 9181:3000
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      BULL_PREFIX: bull
    depends_on:
      - redis

  cron:
    build: cron/.
    depends_on:
      - server
    environment:
      - SERVER_PORT=${PORT}

volumes:
  mongodbdata:
  redis_data:
